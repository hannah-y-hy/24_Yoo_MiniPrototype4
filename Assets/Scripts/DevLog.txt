Task 1: Setting basic gamefield
    Step 1: Make & modifying Super basic gamefield gameobjects
        step a: make boundaries for whole screen
        step b: for left&right boundaries, make sure they are transparent
            & they should work as a trigger for pingpong ball position respawning

Task 2: Make Basic Movements for Sprites
    Step 1: Super basic player movement system: Rigidbody2D, colliders, etc
        Step a: Apply movement to the paddles vertically using AddForce().
        Step b: make sure the paddles don't exceed maximum speed limits.
    Step 2: Pingpong ball(3 animals) gameobject respawning
        Step a: Add logic for the ball to respawn in the center after going out of bounds.
        Step b: Make sure the players are reset to starting positions after a reset.

Task 3: Ball Animation Based on Scoring
    Step 1: Make sprite sheet animations for Hamster, Chicken, and Cow.
        Step a: Searching for appropriate sprite sheets free asset for each animal.
        Step b: Import the sprite sheets to Unity and slice them into individual sprites.
    Step 2: Assign animations to the pingpong ball gameobject.
        Step a: Make an Animator Controller for the ball.
        Step b: Set triggers & transitions between Hamster, Chicken, and Cow animations.
    Step 3: Make score-based animation switching.
        Step a: Update BallScript to trigger animations based on the score.
        Step b: Test if the animations switch correctly upon scoring.
                ⮕ or I might wanna do this step after task 3

Task 4: Scoring and Respawning
    Step 1: make sure that the scores are correctly updated for both players.
        Step a: Make sure that the ball respawns at the center of the screen after every goal.
        Step b: Fix the issue if there's any. e.g.:Make sure both players’ scores are not increased simultaneously.
    Step 2: Check for OnTriggerEnter2D and make sure it works properly for left & right goals.
        Step a: Test goal collision detection for both players.
        Step b: Make sure that the ball resets after each goal without any issues.

Task 5: Input Settings
    Step 1: Modify Input Manager settings for Vertical and Vertical2.
        Step a: W & S key for left player
        Step b: up & down arrow key for right player
    Step 2: Test paddle movement for both players.
        Step a: Check whether it's too fast or slow
        Step b: Modify some elements like 'mass', 'drag' in rb2D panel so that I could find out the best movement for both players 


<DevLog>

10/05 
Task: Brainstorming & making pingpong ball animation based on scoring.
    Found out some free animal sprite sheets assets on itch 
    Made sprite sheets animations for Hamster(facing front), Chicken, and Cow.
    Set up Animator Controller and transitions between the three states: Hamster -> Chicken -> Cow.
* What I need to do after setting up scoring system: trigger the correct animations when a player scores.

10/07 
Task: Making vetical movement for players and some logics like gameobject position resetting.
    Made vertical movement for both players using AddForce().
    Trying to set up speed limits to make sure paddles don’t move too quickly.
    Made position resetting logic to reset the paddles and the ball after a goal.
* What I might wanna do later: refine paddle movement, particularly the maximum speed settings.

10/08 
Task: Setting up scoring system and respawning, etc
    Made sure that the ball resets to the center after each goal.
    added logic to ensure the paddles are reset correctly after every round.
    Just learned that there's another way to show scores: TextMesh Pro?
        + and the googled document is saying that it's better than general text  UI for some reason so I'm trying to use TMpro
        Reffered tutorial (KOR): https://hyeokjunjjang.tistory.com/entry/UNITY-TextMesh-Pro-%EA%B0%84%EB%8B%A8-%EC%82%AC%EC%9A%A9%EB%B2%95
    Fixed the issue where only one player's score was increasing: it was a problem related to 'isLeftPlayer' bool
    Testing scoring system for a couple of times rounds and struggling with respawning
        ⮕I'm pretty sure that this problem is related to interaction between boundary gameobjects and pingpong ball gameobject so I'm keep going through 2 scripts related to them
        ⮕Just realized that I made one silly mistake on BallScript

Another task: Modifying input settings and semi-finalize paddle control.
    Setting up Input Manager settings for Vertical(left player) and Vertical2(right player)
    I was about to test paddle movements for both players but it seems like fixing input key issues are priority
    Realized that I messed up some stuff on Input manager panel
    paddles(=players) are now responding correctly to key presses.

10/09 and a bit more till 10/10 AM
Task: Woring on ball animations and scoring-related interaction
    Making sure animations are triggered correctly based on the score and I guess I'll probably have to debug it through next week
    Tried to fix minor animation glitches where the ball wasn't changing sprites after certain scores but kinda stuck right now
        ⮕just figured out that it's something related to trigger settiong on animation panel and googling some resources

10/10 In-class Work Session
Task: Testing and adjustments
Endless Testplays
Priority: animations, and ball reset 
Fixed small issues with ball respawn after 3+ scores.



< Mini Prototype 4 >
: Wanted to keep develop what I made for 10/10's class
⮕Just decided to develop & modify & refine this Pong game and probably this is gonna be my mini prototype 4
⮕⮕I'll need additional task lists

< Task lists from now on >

Task 1: Planning an unexpected event to occur every 3 points
(Maybe changing the appearance & size of the player and the ping-pong ball)
    Step 1: Research if it's possible to change appearance between an animated game object and a static one.
        Step a: Figure out if it’s possible to swap appearances between animated and non-animated game objects.
        Step b: Learn how to manage animations when the appearance of two game objects is swapped.
        Step c: Confirm whether this event can be implemented within the week.
    * TBH I’m not 100% sure I can really pull this off, so I’ll make a final decision after this research.


Task 2: Setting up the trigger and smooth transitions between the start and end of the event
    Step 1: Make sure the score works as the trigger for starting and ending the event.
        e.g) When the score reaches 3, the player paddle should switch to the animal animation currently applied to the ball.
                If the score range is 3–5, the event continues.
                If the score reaches 6, the event ends and everything resets.
                If the score range is 6–8, no event occurs (similar to 0–2 points).
                    ⮕⮕⮕so it's like the cycle repeats every 3 points
                * This explanation may sound a bit messy but the flowchart with some drawings would make the logic clearer.
    Step 2: Avoid making the event too chaotic 
    = allowing only one player to trigger the event at a time
        Step a: Set a priority system so that the event doesn’t occur for both players at once.
        step b: Make the event ignored if another player is already triggering the event
            *Again it’s easier to explain this with the flowchart


Task 3: Tweaking movement physics based on feedback from test players
    Step 1: Gather feedback from test players (roommates).
        Step a: Ask them to play multiple rounds and note when they found the game fun or frustrating.
    Step 2: Adjust movement settings based on the feedback.
        Step a: find out the best combination of mass + drag + force + etc that could make the best movement for the players
        Step b: Endless cycles of testing and tweaking to get it better


<Devlog>

10/11
: Recap & Research day
Wanted to make sure I really understand the references related stuff from yesterday's class
current task: going through the in-class demo and notes from yesterday's class

10/13
Current Task: Additional researches on how to change the appearance and size of the player and ping-pong ball during a 3-point event.
Spent a lot of time looking up whether it’s possible to switch between an animated game object and an idle one without issues
I wasn’t sure if I could pull this off within the week but just gonna make a try anyway

10/16 and a bit more during in-class work session on 10/17
Current Task: building the 3-point event trigger system(cycle)
setting event priority between players
Got the 3-point cycle working but seems to be chaotic when both LeftPlayer and RightPlayer triggered it at the same time
Made some sort of logic to make sure only one player could activate the event at a time
Also the size reset still felt a bit weird so trying to fix that right now
Still googling some resources in class and realized that resetting methods are super imporant as the methods that make certain event happen 
Maybe I might wanna go over the flowchart again so that I could make this logic a bit more organized

10/18
struggling with the cycle thing mentioned yesterday
Found out the problem: It seems like both left & right players' score was added together and making the event occur
    ⮕ Trying to fix that in GameManagerScript 

10/20
Current Task: tweaking paddle movement physics 
Tested the game with my roommates
    They were laughing when: unexpected event happen, ball gameobject bouncing furiously(seemed to be kind of silly)
    They seemed to be boring when: the rally between 2 players is too long, ball gameobject loses its bouncing force 
Keep adjusting mass, drag, and force 
+ and they said the paddle felt too slippery—like sliding on ice
experimented with the mass and drag settings to make the movement more controlled but it seems to be too lazy right now cuz every movements are controlled too properly
    ⮕ making the paddle(player) a bit slippery again so that it could work as an element taht gives difficulty to the players
    ⮕⮕It made the rally shorter too

10/23 and a bit more till 10/24 in AM 
Ran into issues with the ball not respawning properly after it went off-screen or when players scored
Current Task: Debugging ball respawn issues to ensure smooth gameplay after it goes off-screen or after scoring.
I realized the reset logic wasn’t running consistently After adding some debug lines
Keep going through BallScript 


10/24 in-class work session
Current task:a bit more struggling with movement modifications
Still didn't really liked the movement of the ball gameobject so trying to adjust some stuff on BallScript
    * Problem specifications: There seems to be a decrese of bouncing force when the ball gameobject is reflected by the paddle 
                              right now: trying to make "  if (collision.gameObject.CompareTag("Player"))" thing work properly
                              ... but it seems like there's nothing wrong with the script so I'm just tweaking physics materials right now
Doubled bounciness of the bounce material and testplayed: just realized that it's too much
current bounciness == 1.5 : the movement looks way better than before but I might wanna do some more testplays later just to make sure this amount of bounciness is right for the players

